#---------------------------------------------------------------------------------------------------
#                                  SETTINGS
#---------------------------------------------------------------------------------------------------

# Change plugins install dir
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins'

# Change prefix
set -g prefix C-n

# Enable mouse
set -g mouse on

# Vi style key bindings in copy mode
set -g mode-keys vi

# Vi style key bindings at the command prompt
set -g status-keys vi

# No delay when using escape in vim
set -sg escape-time 0

# Disable repeating commands without pressing the prefix-key
set -g repeat-time 0

# Lots of scrollback
setw -g history-limit 99999

# Needed
set -g default-terminal screen-256color

# Duration of indicators in ms
set -g display-panes-time 2500

# Disable notifications
set -g monitor-activity off
set -g visual-activity off

# Default pane border style
set -g pane-border-style bg=colour0,fg=#423f3e

# Active pane border style
set -g pane-active-border-style bg=colour0,fg=colour2

# Other pane height in main-horizontal layout
set -g other-pane-height 20

# Other pane width in main-vertical layout
set -g other-pane-width 85

# Turn on focus-events to use pane-focus-in and pane-focus-out hooks
set -g focus-events on

# Change pane bg color when focused
set-hook -g pane-focus-in "select-pane -P bg=#302d2c"

# Restore pane bg color when not focused
set-hook -g pane-focus-out "setw synchronize-panes on \; select-pane -P bg=colour0 \; setw synchronize-panes off"


#---------------------------------------------------------------------------------------------------
# Status Bar

# Status line position
set -g status-position top

# Status line bg and fg
set -g status-style bg=colour0,fg=colour6

# No interval refresh
set -g status-interval 999999

# Display session name to the right
set -g status-right '#[fg=colour2,bold]#S session'
set -g status-right-length 20

# Leave it empty so the windows list is properly displayed
set -g status-left ''

# Windows list to the left
set -g status-justify left

# Windows list starting from 1
set -g base-index 1

# Windows list format
setw -g window-status-format "#W"
setw -g window-status-current-format "|>#W<|"
setw -g window-status-current-style bg=colour0,fg=colour2,bold,
setw -g window-status-separator "   "

#---------------------------------------------------------------------------------------------------
#                                  BINDINGS
#---------------------------------------------------------------------------------------------------

# Shared bindings with WM (check ~/.local/bin/i3-binding)

# Mod+v split-window -h
# Mod+s split-window -v

# Mod+q kill-pane
# Mod+h select-pane -L
# Mod+j select-pane -D
# Mod+k select-pane -U
# Mod+l select-pane -R

# Mod+shift+h swap-pane -s {left-of}
# Mod+shift+j swap-pane -s {down-of}
# Mod+shift+k swap-pane -s {up-of}
# Mod+shift+l swap-pane -s {right-of}

# Mod+r - toggle resize mode
# The following bindings becomes available:
# h resize-pane -L 5
# j resize-pane -D 5
# k resize-pane -U 5
# l resize-pane -R 5

# Mod+f resize-pane -Z
#------------------------------------------------------------------------------

# Reloaded from vim autocmd on bufwritepost this file
# bind r source $XDG_CONFIG_HOME/tmux/tmux.conf \; display "CONFIG RELOADED"

bind C-n send-prefix

bind : command-prompt

# Escape to toggle copy mode
bind Escape copy-mode
bind -T copy-mode-vi Escape send -X cancel

# Visual block
bind -T copy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection

bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line

# Prefix + / to search
bind / copy-mode \; send-key /
bind ? copy-mode \; send-key ?

# Incremental search
bind -T copy-mode-vi / command-prompt -i -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""

# Yanking
bind -T copy-mode-vi y send -X copy-pipe-no-clear "xsel -ib"
bind -T copy-mode-vi Y send -X begin-selection \; send -X end-of-line \; send -X copy-pipe-no-clear "xsel -ib"
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-no-clear 'xsel -ib'
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -ib"
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -ib"
# Vim aware double and triple click
bind -n DoubleClick1Pane run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && xdotool key v+i+w) || tmux select-pane \\; copy-mode -M \\; send -X select-word \\; send -X copy-pipe-no-clear 'xsel -ib'"
bind -n TripleClick1Pane run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && xdotool key V) || tmux select-pane \\; copy-mode -M \\; send -X select-line \\; send -X copy-pipe-no-clear 'xsel -ib'"

# Window
bind c new-window
bind C-o previous-window
bind C-i next-window
bind TAB last-window


# # copytk prefix: easymotion action bindings
# bind-key -T copytk s run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easymotion-search --search-nkeys 1"
# bind-key -T copytk S run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easymotion-search --search-nkeys 2"
# bind-key -T copytk k run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easymotion-lines --search-direction backward"
# bind-key -T copytk j run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easymotion-lines --search-direction forward"
# bind-key -T copytk n run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easymotion-lines"

# # copy mode: easymotion action bindings
# bind-key -T copy-mode-vi s run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easymotion-search --search-nkeys 1"
# bind-key -T copy-mode s run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easymotion-search --search-nkeys 1"

# # copytk prefix: easycopy action bindings
# bind-key -T copytk y run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easycopy --search-nkeys 1"
# bind-key -T copytk Y run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easycopy --search-nkeys 2"

# # tmux prefix: easycopy action bindings
# bind-key -T prefix S run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easycopy --search-nkeys 1"
# bind-key -T prefix C-s run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py easycopy --search-nkeys 1"

# # tmux prefix: quickcopy action bindings
# bind-key -T prefix y run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py quickcopy"
# # tmux bind-key -T prefix C-q run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py quickcopy"

# # tmux prefix: quickopen action bindings
# bind-key -T prefix o run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py quickopen"
# # tmux bind-key -T prefix C-p run-shell -b "python3 $TMUX_PLUGIN_MANAGER_PATH/tmux-copy-toolkit/copytk.py quickopen"

# # bindings to enter copytk prefix
# bind-key -T copy-mode-vi S switch-client -T copytk
# bind-key -T copy-mode S switch-client -T copytk


#---------------------------------------------------------------------------------------------------
#                                  PLUGINS
#---------------------------------------------------------------------------------------------------

set -g @plugin 'CrispyConductor/tmux-copy-toolkit'
set -g @copytk-copy-command "xsel -ib"
# set -g @copytk-no-default-binds on

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-dir '~/.cache/tmux'

# Install TPM if not already installed
if "test ! -d ~/.local/share/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm \
     && ~/.local/share/tmux/plugins/tpm/bin/install_plugins'"

# This must be the last line
run -b '~/.local/share/tmux/plugins/tpm/tpm'
